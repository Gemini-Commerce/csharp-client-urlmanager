/*
 * Url Manager Service
 *
 * The URL Manager service provides a set of APIs for managing URL rewrites within your application. URL rewriting is a technique used to modify the appearance or structure of URLs while maintaining the functionality and accessibility of the underlying resources.  The URL Manager service offers various operations to create, retrieve, update, and delete URL rewrite configurations. These configurations allow you to define rules that map incoming URLs to different paths or destinations based on specific criteria. By using URL rewriting, you can enhance the user experience, improve SEO (Search Engine Optimization), and manage complex URL structures effectively.  To get started with the URL Manager service, you need to integrate the provided Proto API into your application. The API supports various programming languages and frameworks, making it easy to incorporate URL rewriting functionality into your existing codebase.  Once integrated, you can utilize the different API methods to create, manage, and query URL rewrite configurations based on your application's requirements.  Refer to the API documentation for detailed information on the request and response formats, authentication requirements, and example usage of each API method.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using urlmanager.Model;
using urlmanager.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace urlmanager.Test.Model
{
    /// <summary>
    ///  Class for testing UrlmanagerCreateUrlRewriteRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UrlmanagerCreateUrlRewriteRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UrlmanagerCreateUrlRewriteRequest
        //private UrlmanagerCreateUrlRewriteRequest instance;

        public UrlmanagerCreateUrlRewriteRequestTests()
        {
            // TODO uncomment below to create an instance of UrlmanagerCreateUrlRewriteRequest
            //instance = new UrlmanagerCreateUrlRewriteRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UrlmanagerCreateUrlRewriteRequest
        /// </summary>
        [Fact]
        public void UrlmanagerCreateUrlRewriteRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" UrlmanagerCreateUrlRewriteRequest
            //Assert.IsType<UrlmanagerCreateUrlRewriteRequest>(instance);
        }

        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }

        /// <summary>
        /// Test the property 'Context'
        /// </summary>
        [Fact]
        public void ContextTest()
        {
            // TODO unit test for the property 'Context'
        }

        /// <summary>
        /// Test the property 'RequestPath'
        /// </summary>
        [Fact]
        public void RequestPathTest()
        {
            // TODO unit test for the property 'RequestPath'
        }

        /// <summary>
        /// Test the property 'TargetPath'
        /// </summary>
        [Fact]
        public void TargetPathTest()
        {
            // TODO unit test for the property 'TargetPath'
        }

        /// <summary>
        /// Test the property 'RedirectType'
        /// </summary>
        [Fact]
        public void RedirectTypeTest()
        {
            // TODO unit test for the property 'RedirectType'
        }

        /// <summary>
        /// Test the property 'LinkRel'
        /// </summary>
        [Fact]
        public void LinkRelTest()
        {
            // TODO unit test for the property 'LinkRel'
        }
    }
}
